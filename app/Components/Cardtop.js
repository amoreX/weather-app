import Time from "./Time";
import { motion } from "framer-motion";
export default function cardtop(props) {
	const cloudy = (
		<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1024 1024" className="icon" version="1.1">
			<path
				d="M729.6 626.56S666.24 481.28 536.96 490.24c-1.28 0-152.96-4.48-179.84 189.44 0-1.28-161.28-15.36-172.16 106.24 1.28 0.64-12.8 156.8 190.72 143.36l445.44 0.768s179.84-75.264 106.88-220.16-198.4-83.328-198.4-83.328z"
				fill="#FFFFFF"
			/>
			<path
				d="M739.968 413.184c0 47.872-9.856 93.568-27.648 134.912-6.144 14.336-13.312 28.16-21.248 41.472-29.184-49.28-82.944-82.432-144.128-82.432-90.368 0-164.096 71.936-167.296 161.408-0.128 2.048-0.128 3.968-0.128 6.016v0.512c0 2.048 0 4.096 0.128 6.144 0.64 14.592-13.952 25.088-27.52 20.224-1.792-0.64-3.328-1.28-5.12-1.792h-0.256c-0.512-0.256-1.024-0.256-1.664-0.512s-1.28-0.256-1.792-0.512c-1.28-0.256-2.304-0.64-3.584-0.896-7.168-1.664-14.592-2.56-22.144-2.816-26.88-0.512-51.712 8.832-71.04 24.704-12.928-6.4-25.344-13.568-37.248-21.504C116.992 637.056 56.192 532.352 56.192 413.184c0-188.8 153.088-341.76 341.888-341.76 188.8 0 341.888 152.96 341.888 341.76z m0 0"
				fill="#FFBC00"
			/>
			<path
				d="M787.712 598.528c-15.488 0.128-30.464 2.176-44.672 5.888-13.184 3.456-25.856 8.448-37.632 14.848-0.256 0.128-0.256 0.384-0.256 0.64 0.256 0.768 0.512 1.664 0.768 2.432 0.256 0.512 0.256 1.024 0.512 1.536 0.256 0.768 0.512 1.792 0.768 2.56 4.864 16.128 22.016 25.344 38.144 19.968 0.64-0.256 1.28-0.384 1.792-0.64 1.024-0.256 2.048-0.64 2.944-0.896 1.024-0.256 1.92-0.64 2.944-0.768 9.216-2.432 18.816-3.968 28.672-4.48 81.664-3.968 149.12 65.152 142.976 146.688-4.864 63.744-53.504 115.328-115.712 124.672-6.656 1.024-13.568 1.536-20.48 1.536h-111.872c-0.512 0-0.768 0.64-0.256 0.896 29.44 24.064 66.688 38.784 107.264 39.936 1.664 0.128 3.328 0.128 4.864 0.128 6.912 0 13.696-0.384 20.48-1.152 88.576-10.24 157.44-85.888 157.056-177.28-0.384-97.536-80.64-176.896-178.304-176.512zM335.872 912.64h-20.48c-6.912 0-13.824-0.64-20.48-1.92-51.072-9.856-89.6-55.424-88.32-109.696 0.768-32.768 16.256-61.824 39.936-81.152 19.328-15.872 44.288-25.216 71.04-24.704 7.552 0.256 14.976 1.152 22.144 2.816 1.28 0.256 2.304 0.64 3.584 0.896 0.64 0.128 1.28 0.256 1.792 0.512 0.512 0.128 1.024 0.256 1.664 0.512h0.256c16.256 4.992 32.64-7.424 32.512-24.576v-0.512c0-2.048 0-4.096 0.128-6.016-12.544-6.016-26.112-10.24-40.192-12.544-7.808-1.28-15.744-1.92-23.936-1.92-41.344 0-78.976 16.896-106.112 44.16-26.88 27.136-43.648 64.384-43.648 105.6 0 75.52 56.32 138.368 129.28 148.224 5.248 0.768 10.496 1.152 15.744 1.28h0.256c1.408 0.128 2.944 0.128 4.352 0.128 1.536 0 3.072 0 4.608-0.128 37.888-1.152 72.448-16.512 98.176-40.832h-82.304z m0 0"
				fill="#6D6D6D"
			/>
			<path
				d="M743.04 604.416c-7.424-20.352-17.664-39.296-30.72-56.192-38.144-49.792-98.048-81.92-165.504-81.92-108.672 0-198.144 83.584-207.616 189.696-0.512 6.144-0.768 12.416-0.768 18.688 0 7.808 0.384 15.616 1.28 23.168 1.28 0.256 2.304 0.64 3.584 0.896 0.64 0.128 1.28 0.256 1.792 0.512 0.512 0.128 1.024 0.256 1.664 0.512h0.256c1.792 0.512 3.328 1.152 5.12 1.792 13.696 4.864 28.16-5.632 27.52-20.224-0.128-2.048-0.128-4.096-0.128-6.144v-0.512c0-2.048 0-4.096 0.128-6.016 3.2-89.472 77.056-161.408 167.296-161.408 61.312 0 114.944 33.024 144.128 82.432 5.504 9.472 10.24 19.328 13.952 29.824 0 0.128 0.128 0.256 0.128 0.384 0.256 0.768 0.512 1.664 0.768 2.432 0.256 0.512 0.256 1.024 0.512 1.536 0.128 0.256 0.256 0.512 0.256 0.768 5.376 17.024 23.424 26.752 40.448 21.248 1.024-0.256 2.048-0.64 2.944-0.896 1.024-0.256 1.92-0.64 2.944-0.768-2.048-13.824-5.376-27.136-9.984-39.808zM788.48 912.64c-6.912 0-13.824 1.024-20.48 0H335.872c-2.304 0.384-4.352 0.512-6.656 0.512-4.48 0-9.088-0.512-13.824-0.512-6.912 0-13.824-0.64-20.48-1.92l15.744 42.752h478.72l19.712-42.368c-6.784 1.024-13.568 1.536-20.608 1.536z m0 0"
				fill="#6D6D6D"
			/>
		</svg>
	);
	const rainy = (
		<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1024 1024" className="icon" version="1.1">
			<path
				d="M725.333333 576c-152.917333 0-277.333333-124.416-277.333333-277.333333S572.416 21.333333 725.333333 21.333333h21.333334v21.333334c0 129.386667 105.28 234.666667 234.666666 234.666666h21.333334v21.333334c0 152.917333-124.416 277.333333-277.333334 277.333333z"
				fill="#EFD358"
			/>
			<path
				d="M810.666667 789.333333H213.333333c-105.856 0-192-86.122667-192-192s86.144-192 192-192c17.322667 0 34.624 2.453333 51.669334 7.338667A256.128 256.128 0 0 1 490.666667 277.333333a255.786667 255.786667 0 0 1 232.533333 149.290667A189.653333 189.653333 0 0 1 810.666667 405.333333c105.856 0 192 86.122667 192 192s-86.144 192-192 192z"
				fill="#666666"
			/>
			<path
				d="M659.328 716.288A21.333333 21.333333 0 0 0 640 704h-139.157333l73.642666-184.085333a21.333333 21.333333 0 0 0-36.202666-21.589334l-213.333334 256A21.333333 21.333333 0 0 0 341.333333 789.333333h139.157334l-73.642667 184.085334a21.333333 21.333333 0 0 0 36.202667 21.589333l213.333333-256a21.333333 21.333333 0 0 0 2.944-22.72z"
				fill="#EFD358"
			/>
		</svg>
	);

	const sunny = (
		<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48">
			<title>70 Basic icons by Xicons.co</title>
			<path
				d="M31.12,22.2A10.5,10.5,0,0,0,10.5,24.85a10.23,10.23,0,0,0,4.17,8.26l1.1,0.82L31.5,23.61Z"
				fill="#f9d74a"
			/>
			<path
				d="M46.15,31.4A8.08,8.08,0,0,0,41,28q0-.32,0-0.63A10.94,10.94,0,0,0,30.37,16.21a10.84,10.84,0,0,0-10.53,9.24,10.9,10.9,0,0,0-1.69-.13C12.55,25.32,8,29.62,8,34.9c0,5.46,3.14,9.42,7.82,9.85l24.06,0h0c4.61-.21,8.08-3.64,8.08-8A9,9,0,0,0,46.15,31.4Z"
				fill="#e1e6e8"
			/>
			<path d="M20,11a2,2,0,0,1-2-2V5a2,2,0,0,1,4,0V9A2,2,0,0,1,20,11Z" fill="#f9d74a" />
			<path d="M6,26H2a2,2,0,0,1,0-4H6A2,2,0,0,1,6,26Z" fill="#f9d74a" />
			<path
				d="M31.46,14.56A2,2,0,0,1,30,11.16L33.12,8A2,2,0,0,1,36,10.84L32.88,14A2,2,0,0,1,31.46,14.56Z"
				fill="#f9d74a"
			/>
			<path
				d="M10.54,14.56A2,2,0,0,1,9.12,14L6,10.84A2,2,0,0,1,8.88,8L12,11.16A2,2,0,0,1,10.54,14.56Z"
				fill="#f9d74a"
			/>
		</svg>
	);
	const arrow = (
		<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="#000000">
			<g id="SVGRepo_bgCarrier" strokeWidth={0} />
			<g id="SVGRepo_tracerCarrier" strokeLinecap="round" strokeLinejoin="round" />
			<g id="SVGRepo_iconCarrier">
				{" "}
				<path
					d="M12 5V19M12 5L6 11M12 5L18 11"
					stroke="#ffffff"
					strokeWidth={2}
					strokeLinecap="round"
					strokeLinejoin="round"
				/>{" "}
			</g>
		</svg>
	);
	const arrow2 = (
		<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none">
			<g id="SVGRepo_bgCarrier" strokeWidth={0} />
			<g id="SVGRepo_tracerCarrier" strokeLinecap="round" strokeLinejoin="round" />
			<g id="SVGRepo_iconCarrier">
				{" "}
				<path
					d="M12 5V19M12 5L6 11M12 5L18 11"
					stroke="#c7c7c7"
					strokeWidth={2}
					strokeLinecap="round"
					strokeLinejoin="round"
				/>{" "}
			</g>
		</svg>
	);

	const choice = [
		[sunny, "Cloudy"],
		[rainy, "Rainy"],
		[cloudy, "Sunny"],
	];

	const calcweather = () => {
		if (props.weathercond < 4 && props.weathercond > 0) {
			return 1;
		} else if (props.weathercond > 3 && props.weathercond < 8) {
			return 0;
		} else {
			return 2;
		}
	};

	const getFormattedDate = () => {
		const today = new Date();
		const day = today.getDate();
		const month = today.getMonth() + 1; // Month is zero-based
		const year = today.getFullYear();

		// Pad the day and month with leading zeros if needed
		const formattedDay = day < 10 ? `0${day}` : day;
		const formattedMonth = month < 10 ? `0${month}` : month;

		return `${formattedDay}/${formattedMonth}/${year}`;
	};
	return (
		<motion.div
			initial={{
				scale: 0.1,
				opacity: 0.5,
			}}
			transition={{
				delay: 3.2,
				type: "tween",
				ease: "anticipate",
				duration: 0.4,
			}}
			animate={{
				scale: 1,
				opacity: 1,
			}}
			id="card-top"
		>
			<motion.div
				initial={{
					y: -100,
					opacity: 0,
				}}
				animate={{
					y: 0,
					opacity: 1,
				}}
				transition={{
					delay: 4.2,
					type: "tween",
					ease: "anticipate",
					duration: 0.6,
				}}
				id="dateweek"
			>
				{props.day}
				<div id="date"> {getFormattedDate()} </div>
				<div id="feel">{props.feel}Â°C</div>
				<div id="highlow">
					<div id="maxup">
						<div id="arrow">{arrow}</div>
						<div>{props.high}</div>
					</div>
					<div id="minup">
						<div id="arrow">{arrow}</div>
						{props.low}
					</div>
				</div>
			</motion.div>
			<div id="bar"></div>
			<div id="weather">
				{choice[calcweather()][0]}
				{choice[calcweather()][1]}
			</div>
			<div id="bar"></div>
			<div id="extra">
				<motion.div
					initial={{
						x: -300,
					}}
					transition={{
						delay: 4,
						type: "tween",
						ease: "anticipate",
						duration: 0.4,
					}}
					animate={{
						x: 0,
					}}
					id="left"
				>
					<div id="props">
						Humidity <div id="prop-value">{props.humid}</div>
					</div>
					<div id="props">
						Pressure<div id="prop-value">{props.pressure}pa</div>
					</div>
					<div id="props">
						Sunrise <div id="prop-value">{props.sunrise?.slice(-5)}</div>
					</div>
				</motion.div>
				<motion.div
					initial={{
						x: 300,
					}}
					transition={{
						delay: 4.45,
						type: "tween",
						ease: "anticipate",
						duration: 0.4,
					}}
					animate={{
						x: 0,
					}}
					id="left"
				>
					<div id="props">
						Cloudy <div id="prop-value">{props.cloud}%</div>
					</div>
					<div id="props">
						Wind Speed <div id="prop-value">{props.windspeed}km/h</div>
					</div>
					<div id="props">
						Sunset <div id="prop-value">{props.sunset?.slice(-5)}</div>
					</div>
				</motion.div>
			</div>
			<div id="bar"></div>

			<Time />
		</motion.div>
	);
}
